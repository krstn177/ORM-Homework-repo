// <auto-generated />
using Cars.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cars.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250401062834_FixingRelations")]
    partial class FixingRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cars.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BMW",
                            YearOfManufacture = 2006
                        },
                        new
                        {
                            Id = 2,
                            Name = "Audi",
                            YearOfManufacture = 2015
                        },
                        new
                        {
                            Id = 3,
                            Name = "Toyota",
                            YearOfManufacture = 2020
                        });
                });

            modelBuilder.Entity("Cars.Models.CarEngine", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "EngineId");

                    b.HasIndex("EngineId");

                    b.ToTable("CarEngines");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            EngineId = 1
                        },
                        new
                        {
                            CarId = 2,
                            EngineId = 2
                        },
                        new
                        {
                            CarId = 3,
                            EngineId = 3
                        });
                });

            modelBuilder.Entity("Cars.Models.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<int>("MaxRPM")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.ToTable("Engines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FuelId = 1,
                            HorsePower = 122,
                            MaxRPM = 90,
                            Name = "BMW N45B16"
                        },
                        new
                        {
                            Id = 2,
                            FuelId = 2,
                            HorsePower = 150,
                            MaxRPM = 110,
                            Name = "Audi 2.0 TDI"
                        },
                        new
                        {
                            Id = 3,
                            FuelId = 3,
                            HorsePower = 122,
                            MaxRPM = 72,
                            Name = "Toyota 1.8 VVT-i Hybrid"
                        });
                });

            modelBuilder.Entity("Cars.Models.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fuels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Diesel"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Petrol"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Hybrid"
                        });
                });

            modelBuilder.Entity("Cars.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("MaxSpeed")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Length = 4200.0,
                            MaxSpeed = 210.0,
                            Name = "116i",
                            Weight = 1280.0
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            Length = 4700.0,
                            MaxSpeed = 250.0,
                            Name = "A4",
                            Weight = 1420.0
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            Length = 4350.0,
                            MaxSpeed = 180.0,
                            Name = "Corolla",
                            Weight = 1340.0
                        });
                });

            modelBuilder.Entity("Cars.Models.ModelEngine", b =>
                {
                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.HasKey("ModelId", "EngineId");

                    b.HasIndex("EngineId");

                    b.ToTable("ModelEngines");

                    b.HasData(
                        new
                        {
                            ModelId = 1,
                            EngineId = 1
                        },
                        new
                        {
                            ModelId = 2,
                            EngineId = 2
                        },
                        new
                        {
                            ModelId = 3,
                            EngineId = 3
                        });
                });

            modelBuilder.Entity("Cars.Models.CarEngine", b =>
                {
                    b.HasOne("Cars.Models.Car", "Car")
                        .WithMany("CarEngines")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cars.Models.Engine", "Engine")
                        .WithMany("CarEngines")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Engine");
                });

            modelBuilder.Entity("Cars.Models.Engine", b =>
                {
                    b.HasOne("Cars.Models.Fuel", "Fuel")
                        .WithMany("Engines")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fuel");
                });

            modelBuilder.Entity("Cars.Models.Model", b =>
                {
                    b.HasOne("Cars.Models.Car", "Car")
                        .WithMany("Models")
                        .HasForeignKey("CarId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Cars.Models.ModelEngine", b =>
                {
                    b.HasOne("Cars.Models.Engine", "Engine")
                        .WithMany("ModelEngines")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cars.Models.Model", "Model")
                        .WithMany("ModelEngines")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engine");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Cars.Models.Car", b =>
                {
                    b.Navigation("CarEngines");

                    b.Navigation("Models");
                });

            modelBuilder.Entity("Cars.Models.Engine", b =>
                {
                    b.Navigation("CarEngines");

                    b.Navigation("ModelEngines");
                });

            modelBuilder.Entity("Cars.Models.Fuel", b =>
                {
                    b.Navigation("Engines");
                });

            modelBuilder.Entity("Cars.Models.Model", b =>
                {
                    b.Navigation("ModelEngines");
                });
#pragma warning restore 612, 618
        }
    }
}
